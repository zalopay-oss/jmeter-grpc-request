# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release Jmeter gRPC Plugin

on:
  push

jobs:
  scan-code:
    name: Analyze
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
  run-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Set up dependencies
        run: |
          mvn clean install -Dmaven.test.skip=true
          sudo apt-get update
          sudo apt-get -y install xvfb
      - name: Check cacert
        run: |
          ls -la
          printf "changeit" |  keytool -list -v -keystore dist/cert/cacertslocal
        if: always()
      - name: Run unit test
        run: |
          nohup Xvfb :99 > /dev/null 2>&1 &
          export DISPLAY=:99
          mvn test -Djavax.net.ssl.trustStore=dist/cert/cacertslocal -Djavax.net.ssl.trustStorePassword=changeit
      - name: Verify Dummy Log
        run: |
          cat grpc-dummy-server.log
      - name: Update code coverage to codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          cd target/site
          bash <(curl -s https://codecov.io/bash)
  build-plugin:
    runs-on: ubuntu-latest
    needs: [run-test]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build gRPC Plugin
        run: |
          mvn clean install package -Dmaven.test.skip=true
      - uses: actions/upload-artifact@v2
        with:
          name: gRPC-JMeter-plugin
          path: |
            ./target/jmeter-grpc-request.jar
            README.md
  release-plugin:
    runs-on: ubuntu-latest
    needs: [build-plugin]
    steps:
      - name: Publish new gRPC plugin to release page
        run: |
          echo "Start to publish plugin to release page"
      - uses: actions/download-artifact@v2
        with:
          name: gRPC-JMeter-plugin
      - name: Get release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_RELEASE_TOKEN }}
        with:
          body_path: README.md
          files: |
            jmeter-grpc-request.jar
